{
  "inputs": "<|user|>\nCreate a javascript function that does the following: \" \" \n\nIn order to help in answering the above prompt, the function has access to the following methods to generate outputs.\n\nname: textToImage \ndescription: Generate an image from a text prompt.\nprompt: Generate an image of a cat wearing a top hat \ncommand generated: `textToImage('cat wearing a top hat')`\n-------\nname: imageToText \ndescription: Caption an image.\nprompt: Describe the image \ncommand generated: `imageToText(image)`\n-------\nname: textToSpeech \ndescription: This tool takes a text input and turns it into an audio file.\nprompt: Say the following out loud:\"Hello world!\" \ncommand generated: `textToSpeech('Hello world!')`\n-------\nname: speechToText \ndescription: Transcribe an audio file and returns its text content.\nprompt: Transcribe the sound file \ncommand generated: `speechToText(audio)`\n-------\nname: createRequestAI \ndescription: Create a new request with name and description, convert arguments to JSON.\nprompt: Create a request with name Gucci Bag and description Nice Bag . \ncommand generated: `const output = createRequestAI('{\"name\":\"Gucci Bag\",\"description\":\"Nice Bag\"}')`\n-------\nname: message \ndescription: Send data back to the user.\nprompt: Display the created image \ncommand generated: `message(\"we display the image\", image)`\n\nExamples:\n\nuser: Caption the image and give me the caption read out loud.\nfunction: \n```js\nasync function generate(image) {\n    const caption = await imageToText(image);\n    message(\"First we caption the image\", caption);\n    const output = await textToSpeech(caption);\n    message(\"Then we read the caption out loud\", output);\n    return output;\n}\n```\n-------\n\nuser: Display an image of a yellow dog wearing a top hat\nfunction: \n```js\nasync function generate() {\n        const output = await textToImage(\"yellow dog wearing a top hat\");\n        message(\"We generate the dog picture\", output);\n        return output;\n}\n```\n-------\n\nuser: transcribe the attached audio and only if it contains the word 'dog' generate an image of a dog wearing a top hat\nfunction: \n```js\nasync function generate(audio) {\nconst output = await speechToText(audio);\nmessage(\"We read the text\", output);\n\nif (output.includes(\"dog\")) {\n    const image = await textToImage(\"dog wearing a top hat\");\n    message(\"We generate the dog picture\", image);\n    return image;\n} else {\n    return null;\n}};\n```\n-------\n\nuser: Caption the image and generate an image based on the caption, but in a medieval fantasy style.\nfunction: \n```js\nasync function generate(image) {\n    const caption = await imageToText(image);\n    message(\"First we caption the image\", caption);\n    const output = await textToImage(caption + \" medieval fantasy\");\n    message(\"Then we generate an image based on the caption\", output);\n    return output;\n}\n```\n-------\n\nuser: Who Was Napoléon Bonaparte?\nfunction: \n```js\nasync function generate() {\n\tmessage(\"Napoléon Bonaparte was a French military and political leader.\");\n}\n```\n-------\n\nuser: What is 5+5?\nfunction: \n```js\nasync function generate() {\n\tmessage(`5+5 is equal to 10`);\n}\n```\n-------\n\nuser: Can you draw the current president of France?\nfunction: \n```js\nasync function generate() {\n\tconst output = await textToImage(\"Emmanuel Macron\");\n\tmessage(\"The current president of France\", output);\n\treturn output\n}\n```\n\nIf you need to send information to the user use `message(\"message\", data)` and NOT `console.log`.\n\nUse the above methods and only the above methods to answer the prompt:  .\n\nThe generated function must match the following signature:\n```js\nasync function generate() {\n// your code here\nreturn output;\n};\n```\n\nIf you are not sure how to do it, try anyway and give it your best shot, as the user can always correct you later.<|end|><|assistant|>",
  "model": "OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5",
  "parameters": {
    "max_new_tokens": 900
  }
}
